<apex:page controller="asb_StorePreferencesController" action="{!init}" showheader="{!isDesktop}" title="{!storeName}" sidebar="false" id="apps" standardstylesheets="false" tabStyle="Store_Administration__tab">
	<apex:composition template="asb_AppxStoreBldrLayout">
		<apex:define name="content">
			<div class="prx-content-block prx-content-block-admin">
				<!-- title bar -->
				<c:asb_storePreferencesTitle injectedController="{!controller}"/>
				<div class="prx-content-content prx-content-content-with-secondary">
					<apex:form id="advancedForm">
						<div class="prx-content-content-inner">
							<c:asb_leftSidebar selected="{!$Label.asb_Store_Preferences}" />
							<div class="prx-content-primary">
								<div class="prx-content-primary-inner">
									<div class="prx-content-generic">
										<c:asb_storePreferencesTabs selected="{!$Label.asb_Advanced}" storeIsCreated="{!NOT(store.isNew)}" />
										<div class="prx-form-info-a">
											<label class="prx-form-label"><span class="prx-label-text"><apex:outputText value="{!$Label.asb_ChatterFeed}" /></span></label>
											<div class="prx-form-group">
												<apex:inputCheckbox value="{!store.enableChatter}" id="display_chatter" styleClass="prx-checkbox" /><label for="display_chatter"><apex:outputText value="{!$Label.asb_DisplayChatterOptionLabel}" /></label>
											</div>
											<label class="prx-form-label"><span class="prx-label-text"><apex:outputText value="{!$ObjectType.asb_Store__c.fields.AppTypes__c.label}" /></span> <span class="prx-req">*</span></label>
											<div class="prx-form-group" id="store_app_types">
												<p class="prx-form-explanation"><apex:outputText value="{!$Label.asb_SelectStoreAppTypes}" /></p>
												<apex:selectCheckboxes value="{!store.appTypes}" layout="pageDirection">
													<apex:selectOptions value="{!appTypeSelectOptions}" />
												</apex:selectCheckboxes>
											</div>
										</div>
										<div class="prx-btn-group prx-btn-group-a">
											<a onclick="PrX.onbeforeunload = '';" href="javascript:saveAdvanced();" class="prx-btn prx-btn-primary"><apex:outputText value="{!$Label.asb_Save}" /></a>
										</div>									
									</div>
								</div>
							</div>
						</div>
						<apex:actionFunction name="saveAdvanced" action="{!saveAdvanced}"/>
					</apex:form>
				</div>
			</div>
	
			<script>
            //<![CDATA[
		        jQuery(document).ready(function() {
		            // If the user leaves the page without saving, we will warn them. 
		            // We will look at the chatter feed checkbox and app type checkboxes in an array. 
		            // If they have changed, we can warn the user. 
		            // First store the current values.
		            var $chatterFeedField = jQuery(PrX.jQid('{!$Component.advancedForm.display_chatter}'));
		            var $appTypesOuter = jQuery('#store_app_types');
		            chatterFeedOriginalValue = $chatterFeedField.is(':checked');
		            appTypesOriginalValues = []; 
		            $appTypesOuter.find(':checkbox').each(function() {
		                var $thisCheckbox = jQuery(this);
		                appTypesOriginalValues.push($thisCheckbox.is(':checked'));
		            });
		         // Then add click events to the checkboxes. 
		            $chatterFeedField.on('click',function() {
		                PrX.checkFormFieldsForChange();
		            });
		            $appTypesOuter.find(':checkbox').each(function() {
		                var $thisCheckbox = jQuery(this);
		                $thisCheckbox.on('click',function() {
		                    PrX.checkFormFieldsForChange();
		                });
		            });
		        });
		    
		        // For translation purposes, this is in the page. 
		        PrX.onbeforeunloadTitle = '{!$Label.asb_LeavePageMessage}';
		        var chatterFeedOriginalValue;
		        var appTypesOriginalValues;
		        // Every time there is an appropriate event on the page, we will call this function (e.g. a checkbox click). 
		        // We will compare current values with the original values. 
		        // If they are different, we will set the PrX.onbeforeunload string to the correct message. 
		        // Some JS will then warn the user when she leaves the page. 
		        PrX.checkFormFieldsForChange = function() {
		            var $chatterFeedField = jQuery(PrX.jQid('{!$Component.advancedForm.display_chatter}'));
		            var $appTypesOuter = jQuery('#store_app_types');
		            var chatterFeedValue = $chatterFeedField.is(':checked');
		            var appTypesValues = []; 
		            var appTypesAreTheSame = true;
		            $appTypesOuter.find(':checkbox').each(function(i) {
		                var $thisCheckbox = jQuery(this);
		                if ($thisCheckbox.is(':checked') !== appTypesOriginalValues[i]) {
		                    appTypesAreTheSame = false;
		                }
		            });
		            
		            if ($chatterFeedField.is(':checked') !== chatterFeedOriginalValue || appTypesAreTheSame === false) {
				        PrX.onbeforeunload = '{!$Label.asb_UnsavedChangesMessage}';
		            }
		            else {
		                PrX.onbeforeunload = '';
		            }
		        };
		
		        jQuery(window).on('debouncedresize', function() {
		        });
		    // ]]>
			</script>
		</apex:define>
	</apex:composition>
</apex:page>